const { Telegraf } = require('telegraf');

// –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Vercel
// –ú—ã –Ω–µ –≤—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –ø—Ä—è–º–æ —Å—é–¥–∞, –∞ –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –µ–≥–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ Vercel
const BOT_TOKEN = process.env.BOT_TOKEN || '7485417933:AAEDwQG3F8yDO9hOMkDTGw23kYJ130p_eNI';

// URL –≤–∞—à–µ–≥–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞)
const WEB_APP_URL = 'https://mini-landing-black.vercel.app/';

if (!BOT_TOKEN) {
  throw new Error('BOT_TOKEN must be provided!');
}

const bot = new Telegraf(BOT_TOKEN);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.start((ctx) => {
  ctx.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.', {
    reply_markup: {
      // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç Web App
      inline_keyboard: [
        [{ text: 'üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', web_app: { url: WEB_APP_URL } }]
      ]
    }
  });
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, —á—Ç–æ–±—ã Vercel –º–æ–≥ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
module.exports = async (req, res) => {
  try {
    // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram –≤ –Ω–∞—à –±–æ—Ç
    await bot.handleUpdate(req.body);
  } catch (err) {
    console.error('Error handling update:', err);
  }
  // –û—Ç–≤–µ—á–∞–µ–º Telegram, —á—Ç–æ –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ
  res.status(200).send('OK');
};